
### DEXTRAN PROJECT METADATA
### analyze mesoscale simulations generated by Samaneh

# groups of simulations to analyze together (REQUIRED)
collections:
  all:
    - CL160ENS-2
    - CL160ENS-3

# where are the inputs (REQUIRED)
slices:
  CL160ENS-2:
    readymade_meso_v1:
      current:
        path: /store-iota/MASTER/Samrad/Mem_Undulation
        directory: CL160ENS-2
        membrane_xyz_glob: memb_xyz-0-0-*.xyz
        nanogel_dat: NG_Position-0_Frame-0.dat
  CL160ENS-3:
    readymade_meso_v1:
      current:
        path: /store-iota/MASTER/Samrad/Mem_Undulation
        directory: CL160ENS-3
        membrane_xyz_glob: memb_xyz-0-0-*.xyz
        nanogel_dat: NG_Position-0_Frame-0.dat

# metadata for each simulation (OPTIONAL)
meta:
  free_membrane_cl0: {}
  bound_membrane_cl0: {}

# avoid repetition inside this YAML file (OPTIONAL)
variables: {}

# which calculations to perform (REQUIRED) via `make compute`
calculations:
  # convert simulation outputs to points on a regular mesh
  import_readymade_meso_v1_membrane:
    uptype: post
    group: all
    slice_name: current
    collections: all
    specs:
      # we assume units are literal nm in the upstream data and use the following interpolation interval
      grid_spacing: 5.0
  # read and save the nanogel points in a structure that mimics the protein_abstractor data type
  import_readymade_meso_v1_nanogel:
    uptype: post
    group: all
    slice_name: current
    collections: all
    specs:
      mapping_style: single_inducer 
  # gently-modified version of the curvature_undulation_coupling calculation which
  # ...substitutes the MD inputs for the mesoscale inputs specific to this project
  curvature_undulation_coupling_dex:
    ignore: false
    uptype: post
    group: all
    slice_name: current
    collections: all
    specs:
      upstream:
        import_readymade_meso_v1_membrane: {}
        import_readymade_meso_v1_nanogel: {}
      design:
        loop:
          v1:
            loader_membrane:
              module: codes.curvature_coupling_loader
              function: curvature_coupling_loader_membrane
            loader_protein:
              module: codes.curvature_coupling_loader
              function: curvature_coupling_loader_protein
            style: wilderness
            curvature_positions: 
              method: neighborhood
              distance_cutoff: 0.0
              spacer: 40.0
            extents:
              method: fixed_isotropic
              extent: 20.0
            curvature_sum: mean
          v2:
            loader_membrane:
              module: codes.curvature_coupling_loader
              function: curvature_coupling_loader_membrane
            loader_protein:
              module: codes.curvature_coupling_loader
              function: curvature_coupling_loader_protein
            style: wilderness
            curvature_positions: 
              method: neighborhood
              distance_cutoff: 0.0
              spacer: 20.0
            extents:
              method: fixed_isotropic
              extent: 10.0
            curvature_sum: mean

# which data to load for plotting (REQUIRED, but optional if you use the same exact name as the calculation)
plots:
  # read the membrane interpolation and compute undulation spectra
  undulations:
    collections: all
    calculation:
      import_readymade_meso_v1_membrane: {}
    specs: 
      routine:
        - spectra
        - height
        - height_histograms
        #- debug3d
      show_fit: False
  # use plot-curvature_undulation_coupling.py to interpret the data for this project with different inputs
  curvature_undulation_coupling:
    calculation: 
      - curvature_undulation_coupling_dex
      - import_readymade_meso_v1_nanogel
      - import_readymade_meso_v1_membrane
    collections: all
    specs: 
      # alternate names to match the calculation inputs above
      calcname: curvature_undulation_coupling_dex
      protein_abstractor_name: import_readymade_meso_v1_nanogel
      undulations_name: import_readymade_meso_v1_membrane
      # alternate loaders for interpreting the nanogel positions
      loader: 
        module: codes.curvature_coupling_loader_dex
        function: prepare_mesoscale_postdat
      # which plots to make
      routine:
        #- curvature_field_review
        - individual_reviews
